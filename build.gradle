plugins {
	id 'fabric-loom' version '0.6-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version + (System.getenv("CIRCLE_BUILD_NUM") != null ? ("-" + System.getenv("CIRCLE_BUILD_NUM")) : "")
group = project.maven_group

minecraft {
	accessWidener "src/main/resources/meteor-client.accesswidener"
}

repositories {
	maven {
		name = "jitpack"
		url = "https://jitpack.io"
	}
	jcenter()
}

dependencies {
	// Minecraft
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_version}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.api_version}"

	// For XRay compatibility
	modImplementation "com.github.CaffeineMC:sodium-fabric:1.16.x~stable-SNAPSHOT"

	// Baritone (the fork is standalone baritone and the only change is a setting to build it as fabric mod instead of forge one)
	include modImplementation("com.github.MeteorDevelopment:baritone:${project.minecraft_version}-SNAPSHOT") {
		exclude(group: "org.lwjgl.lwjgl", module: "lwjgl-platform")
		exclude(group: "org.lwjgl.lwjgl", module: "lwjgl")
		exclude(group: "net.java.jinput", module: "jinput-platform")
		exclude(group: "net.java.jinput", module: "jinput")
		exclude(group: "net.sf.jopt-simple", module: "jopt-simple")
		exclude(group: "org.ow2.asm", module: "asm-debug-all")
	}

	// Other dependencies
	include modImplementation("com.github.MeteorDevelopment:orbit:${project.orbit_version}")
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

jar {
	from "LICENSE"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

publishing {
	publications {
		maven(MavenPublication) {
			artifact ("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar") {
				classifier null
				builtBy remapJar
			}

			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}
}

