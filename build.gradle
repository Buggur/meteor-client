plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
    accessWidenerPath = file("src/main/resources/meteor-client.accesswidener")
}

repositories {
    maven {
		name = "meteor-maven"
		url = "https://maven.meteordev.org"
	}
    maven {
        name = "meteor-maven-snapshots"
        url = "https://maven.meteordev.org/snapshots"
    }
	jcenter()

    // For Canvas
    maven {
        name = "dblsaiko"
        url = "https://maven.dblsaiko.net/"
    }
}

dependencies {
	// Minecraft
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.api_version}"

	// For XRay compatibility
	//modImplementation "com.github.CaffeineMC:sodium-fabric:${project.sodium_version}"
    modCompileOnly("me.jellysquid.mods:sodium-fabric:${project.sodium_version}") {
        transitive = false
    }

    // Canvas for compatibility
    modCompileOnly("grondag:canvas-mc117-1.17:1.0.+") { transitive = false }

	// Baritone (the fork is standalone baritone and the only change is a setting to build it as fabric mod instead of forge one)
    include modImplementation("baritone:baritone:${project.baritone_version}")

	// Other dependencies
    include modImplementation("meteordevelopment:orbit:${project.orbit_version}")
    include modImplementation("meteordevelopment:starscript:${project.starscript_version}")
}

processResources {
	inputs.property "version", project.version

    duplicatesStrategy = DuplicatesStrategy.WARN

    from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version

        filter { line -> line.replace("@mc_version@", project.minecraft_version) }
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 16
}

jar {
	from "LICENSE"
}

javadoc {
    options.addStringOption('Xdoclint:none', '-quiet')
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set("sources")
	from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    archiveClassifier.set("javadoc")
    from javadoc
}

publishing {
    publications {
        java(MavenPublication) {
            artifactId = "meteor-client"
            version = project.mod_version

            artifact(remapJar) {
                builtBy remapJar
            }

            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }

            artifact(javadocJar) {
                builtBy javadocJar
            }
        }
    }
}

apply from: "scripts/packetutils.gradle"
